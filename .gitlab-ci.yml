variables:
  BUILD_VERSION: $CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA

stages:
  # - sonar # проверка sonarqube кода на уязвимость
  - build  # Сборка Front
  - build_image # Сборка Docker
  # - deploy # Установка на стенд
  
# sonarqube-check:
#   stage: sonar
#   image:
#     name: sonarsource/sonar-scanner-cli:5.0
#     entrypoint: [""]
#   variables:
#     SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
#     GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
#   cache:
#     key: "${CI_JOB_NAME}"
#     paths:
#       - .sonar/cache
#   script:
#     - >
#     sonar-scanner
#     -Dsonar.projectKey=Alis_fe
#     -Dsonar.qualitygate.wait=true
#     -Dsonar.exclusions=mobile/ios/**/*,mobile/android/**/*,fullscreen/src/__tests__/**/*
#     -Dsonar.javascript.lcov.reportPaths=fullscreen/coverage/lcov.info

fullscreen-build-npm-frontend:
  stage: build
  image: node:alpine
  script:
    - npm install
    - npm run build
  artifacts:
    when: always
    expose_as: 'npm artifact'
    name: 'alis-frontend-build'
    paths:
      - build/
    expire_in: 1 hour

fullscreen-create-docker-image:
  stage: build_image
  image: docker:24.0.5
  variables:
    CI_REGISTRY_IMAGE: "registry-gitlab-devops1c.alabuga.ru"
    DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE/${CI_PROJECT_NAME}/${CI_COMMIT_REF_SLUG}:${CI_COMMIT_SHORT_SHA}
    DOCKER_HOST: "tcp://localhost:2375"
    DOCKER_TLS_CERTDIR: ""
    DOCKER_OPTS: "--insecure-registry=registry-gitlab-devops1c.alabuga.ru"
  services:
    - name: docker:24.0.5-dind
      entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
      command: ["--insecure-registry", "registry-gitlab-devops1c.alabuga.ru"]
  before_script:
    - echo "${BUILD_VERSION}"
    - docker info
    - docker login $CI_REGISTRY_IMAGE
  script:
    - docker build --build-arg build_version=${BUILD_VERSION} -t $DOCKER_IMAGE_NAME .
    - docker push "$DOCKER_IMAGE_NAME"

# deploy-test:
#   stage: deploy
#   script:
#     "Скрипт поднятия Docker compose"